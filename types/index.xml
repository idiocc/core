<types>
  <t name="Context" type="import('koa').Context" />
  <t name="SetHeaders" type="(res: import('http').ServerResponse, path: string, stats: import('fs').Stats) => any" />
  <t name="StaticConfig">
    <p number name="maxage" default="0">Browser cache max-age in milliseconds.</p>
    <p boolean name="hidden" default="false"> Allow transfer of hidden files.</p>
    <p string name="index" default="index.html">Default file name.</p>
    <p boolean name="defer">If `true`, serves after return next(), allowing any downstream middleware to respond first.</p>
    <p boolean name="gzip" default="true"> Try to serve the gzipped version of a file automatically when gzip is supported by a client and if the requested file with .gz extension exists.</p>
    <p boolean name="br" default="true">Try to serve the brotli version of a file automatically when brotli is supported by a client and if the requested file with .br extension exists (note, that brotli is only accepted over https).</p>
    <p type="SetHeaders" name="setHeaders">Function to set custom headers on response.</p>
    <p boolean name="extensions" default="false">Try to match extensions from passed array to search for file when no extension is sufficed in URL. First found is served.</p>
  </t>
</types>
