{"version":3,"sources":["../../src/lib/start-app.js"],"names":["LOG","DEFAULT_PORT","DEFAULT_HOST","destroy","server","Promise","resolve","on","listen","app","port","hostname","cb","r","j","ec","err","e","removeListener","once","startApp","middleware","config","host","process","kill","pid","appMeta","p","address","url","router","Router"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,MAAT,CAAZ;AAEA,MAAMC,eAAe,IAArB;AACA,MAAMC,eAAe,SAArB;;AAEA,eAAeC,OAAf,CAAuBC,MAAvB,EAA+B;AAC7B,QAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC7BF,WAAOG,EAAP,CAAU,OAAV,EAAmBD,OAAnB;AACAF,WAAOD,OAAP;AACD,GAHK,CAAN;AAIAH,MAAI,sBAAJ;AACD;AAED;;;;;;;AAKA,SAASQ,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,WAAW,SAAtC,EAAiD;AAC/C,QAAMC,KAAK,qBAAO,IAAP,CAAX;AACA,SAAO,IAAIP,OAAJ,CAAY,CAACQ,CAAD,EAAIC,CAAJ,KAAU;AAC3B,UAAMC,KAAMC,GAAD,IAAS;AAClB,YAAMC,IAAIL,GAAGI,GAAH,CAAV;AACAF,QAAEG,CAAF;AACD,KAHD;;AAIA,UAAMb,SAASK,IAAID,MAAJ,CAAWE,IAAX,EAAiBC,QAAjB,EAA2B,MAAM;AAC9CE,QAAET,MAAF;AACAK,UAAIS,cAAJ,CAAmB,OAAnB,EAA4BH,EAA5B;AACD,KAHc,EAGZI,IAHY,CAGP,OAHO,EAGEJ,EAHF,CAAf;AAID,GATM,CAAP;AAUD;AAED;;;;;;;AAKA,eAAeK,QAAf,CAAwBC,UAAxB,EAAoCC,MAApC,EAA4C;AAC1C,QAAM;AACJZ,WAAOT,YADH;AAEJsB,WAAOrB;AAFH,MAGFoB,MAHJ,CAD0C,CAM1C;;AACAE,UAAQL,IAAR,CAAa,SAAb,EAAwB,YAAY;AAClC,UAAMV,IAAIN,OAAJ,EAAN;AACAqB,YAAQC,IAAR,CAAaD,QAAQE,GAArB,EAA0B,SAA1B;AACD,GAHD;AAKA,QAAMC,UAAU,MAAM,wBAAUN,UAAV,EAAsBC,MAAtB,CAAtB;AACA,QAAM;AAAEb;AAAF,MAAUkB,OAAhB;AAEA,QAAMvB,SAAS,MAAMI,OAAOC,GAAP,EAAYC,IAAZ,EAAkBa,IAAlB,CAArB;AAEA,8BAAcnB,MAAd;;AACAK,MAAIN,OAAJ,GAAc,YAAY;AACxB,UAAMA,QAAQC,MAAR,CAAN;AACD,GAFD;;AAGA,QAAM;AAAEM,UAAMkB;AAAR,MAAcxB,OAAOyB,OAAP,EAApB;AAEA,QAAMC,MAAO,oBAAmBF,CAAE,EAAlC;AAEA,QAAMG,SAAS,IAAIC,kBAAJ,EAAf;AAEA,SAAO,EAAE,GAAGL,OAAL;AAAcI,UAAd;AAAsBD;AAAtB,GAAP;AACD;;eAEcV,Q","sourcesContent":["import { debuglog } from 'util'\nimport enableDestroy from 'server-destroy'\nimport Router from 'koa-router'\nimport erotic from 'erotic'\nimport createApp from './create-app'\n\nconst LOG = debuglog('idio')\n\nconst DEFAULT_PORT = 5000\nconst DEFAULT_HOST = '0.0.0.0'\n\nasync function destroy(server) {\n  await new Promise((resolve) => {\n    server.on('close', resolve)\n    server.destroy()\n  })\n  LOG('destroyed the server')\n}\n\n/**\n * @param {import('koa').Application} app\n * @param {number} [port]\n * @param {string} [hostname='0.0.0.0']\n */\nfunction listen(app, port, hostname = '0.0.0.0') {\n  const cb = erotic(true)\n  return new Promise((r, j) => {\n    const ec = (err) => {\n      const e = cb(err)\n      j(e)\n    }\n    const server = app.listen(port, hostname, () => {\n      r(server)\n      app.removeListener('error', ec)\n    }).once('error', ec)\n  })\n}\n\n/**\n * Start the server.\n * @param {import('..').MiddlewareConfig} [middleware]\n * @param {import('..').Config} [config] configuration object\n */\nasync function startApp(middleware, config) {\n  const {\n    port = DEFAULT_PORT,\n    host = DEFAULT_HOST,\n  } = config\n\n  // close all connections when running nodemon\n  process.once('SIGUSR2', async () => {\n    await app.destroy()\n    process.kill(process.pid, 'SIGUSR2')\n  })\n\n  const appMeta = await createApp(middleware, config)\n  const { app } = appMeta\n\n  const server = await listen(app, port, host)\n\n  enableDestroy(server)\n  app.destroy = async () => {\n    await destroy(server)\n  }\n  const { port: p } = server.address()\n\n  const url = `http://localhost:${p}`\n\n  const router = new Router()\n\n  return { ...appMeta, router, url }\n}\n\nexport default startApp"],"file":"start-app.js"}