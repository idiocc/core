{"version":3,"sources":["../../src/lib/setup-middleware.js"],"names":[],"mappings":"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","file":"lib/setup-middleware.js","sourcesContent":["import session from 'koa-session'\nimport CSRF from 'koa-csrf'\nimport multer from 'koa-multer'\nimport bodyParser from 'koa-bodyparser'\nimport logger from 'koa-logger'\nimport ensurePath from '@wrote/ensure-path'\nimport { join, resolve } from 'path'\nimport compress from 'koa-compress'\nimport serve from 'koa-static'\nimport compose from 'koa-compose'\nimport { Z_SYNC_FLUSH } from 'zlib'\nimport Mount from 'koa-mount'\nimport checkAuth from './check-auth'\n\nfunction setupStatic(app, config, {\n  root = [],\n  maxage,\n  mount,\n}) {\n  const roots = Array.isArray(root) ? root : [root]\n  const m = roots.map((r) => {\n    const fn = serve(r, {\n      maxage,\n      ...config,\n    })\n    return fn\n  })\n  const c = compose(m)\n  if (mount) return Mount(mount, c)\n  return c\n}\n\nfunction setupCompress(app, config, {\n  threshold = 1024,\n}) {\n  const fn = compress({\n    threshold,\n    flush: Z_SYNC_FLUSH,\n    ...config,\n  })\n  return fn\n}\nfunction setupCheckAuth() {\n  return checkAuth()\n}\nfunction setupSession(app, config, { keys }) {\n  if (!Array.isArray(keys)) {\n    throw new Error('Keys must be an array')\n  }\n  app.keys = keys\n  const ses = session(config, app)\n  return ses\n}\nfunction setupCsrf(app, config) {\n  const csrf = new CSRF(config)\n  return csrf\n}\n\nconst setupMulter = async (app, config = {})  => {\n  if (typeof config.dest != 'string') {\n    throw new Error('expecting uploadDir for multer')\n  }\n  const resolvedDir = resolve(config.dest)\n  const uploadDirTestPath = join(resolvedDir, 'test.data')\n  await ensurePath(uploadDirTestPath)\n  const upload = multer(config)\n  return upload\n}\n\nconst setupBodyParser = (app, config) => {\n  const bodyparser = bodyParser(config)\n  return bodyparser\n}\n\nconst setupLogger = (app, config) => {\n  const l = logger(config)\n  return l\n}\n\nconst map = {\n  session: setupSession,\n  multer: setupMulter,\n  csrf: setupCsrf,\n  compress: setupCompress,\n  bodyparser: setupBodyParser,\n  checkauth: setupCheckAuth,\n  logger: setupLogger,\n  static: setupStatic,\n}\n\n/**\n * @return {Middleware}\n */\nasync function initMiddleware(name, conf, app) {\n  if (typeof conf == 'function') {\n    app.use(conf)\n    return conf\n  }\n  let fn\n  if (name in map) {\n    fn = map[name]\n  } else if (conf.middlewareConstructor) {\n    if (typeof conf.middlewareConstructor != 'function') {\n      throw new Error(`Expecting a function in the \"middlewareConstructor\" of the ${name} middleware.`)\n    }\n    fn = conf.middlewareConstructor\n  } else {\n    throw new Error('Either the \"middleware\" or \"middlewareConstructor\" properties must be passed.')\n  }\n  const { use, config = {}, ...rest } = conf\n  const res = await fn(app, config, rest)\n  if (use) {\n    app.use(res)\n  }\n  return res\n}\n\n/**\n * @param {MiddlewareConfig} middleware\n * @param {import('koa').Application} app\n */\nexport default async function setupMiddleware(middlewareConfig = {}, app) {\n  /** @type {Object.<string, Middleware>} */\n  const res = await Object.keys(middlewareConfig)\n    .reduce(async (acc, name) => {\n      const accRes = await acc\n      const conf = middlewareConfig[name]\n      let installed\n      if (Array.isArray(conf)) {\n        const p = conf.map(async (c) => {\n          await initMiddleware(name, c, app)\n        })\n        installed = await Promise.all(p)\n      } else {\n        installed = await initMiddleware(name, conf, app)\n      }\n      return {\n        ...accRes,\n        [name]: installed,\n      }\n    }, {})\n  return res\n}\n\n/** @typedef {import('koa').Middleware} Middleware */\n/** @typedef {import('..').MiddlewareConfig} MiddlewareConfig */\n"]}