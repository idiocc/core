{"version":3,"sources":["../src/index.js"],"names":["idioCore","config","res","url","app","router","middleware","connect"],"mappings":";;;;;;;AACA;;;;AADA;AAGA;;AAEA;;;;;;;;;;AAUe,eAAeA,QAAf,CAAwBC,SAAS,EAAjC,EAAqC;AAClD,QAAMC,MAAM,MAAM,uBAASD,MAAT,CAAlB;AACA,QAAM;AAAEE,OAAF;AAAOC,OAAP;AAAYC,UAAZ;AAAoBC,cAApB;AAAgCC;AAAhC,MAA4CL,GAAlD;AAEA,SAAO;AAAEC,OAAF;AAAOC,OAAP;AAAYG,WAAZ;AAAqBF,UAArB;AAA6BC;AAA7B,GAAP;AACD;AAED","sourcesContent":["// import { debuglog } from 'util'\nimport startApp from './lib/start-app'\n\n// const LOG = debuglog('@idio/core')\n\n/**\n * Start the server.\n * @param {Config} config A configuration object.\n * @param {string} [config.databaseURL='mongodb://localhost:27017'] Address on which to connect to the database.\n * @param {number} [config.port=5000] Port on which to start the server.\n * @param {number} [config.host=0.0.0.0] The host on which to listen.\n * @param {MiddlewareConfig} [config.middleware] Middleware configuration for the idio core server.\n * @param {boolean} [config.autoConnect=true] Whether to automatically connect to the database.\n * @param {RoutesConfig} [config.routesConfig] A configuration object for the router.\n */\nexport default async function idioCore(config = {}) {\n  const res = await startApp(config)\n  const { url, app, router, middleware, connect } = res\n\n  return { url, app, connect, router, middleware }\n}\n\n/**\n * @typedef {Object.<string, (route: function) => (string|function)[]>} MiddlewareMap\n *\n * @typedef {Object.<string, string[]>} AliasMap\n *\n * @typedef {Object} Config\n * @property {string} [databaseURL='mongodb://localhost:27017'] Address on which to connect to the database.\n * @property {number} [port=5000] Port on which to start the server.\n * @property {number} [host=0.0.0.0] The host on which to listen.\n * @property {MiddlewareConfig} [middleware] Middleware configuration for the idio core server.\n * @property {boolean} [autoConnect=true] Whether to automatically connect to the database.\n\n * @typedef ISignature\n * @property {boolean} use\n * @property {Object} config\n * @property {Object} [rest]\n\n * @typedef {Object} Static\n * @property {boolean} [use=false] Use this middleware for every request.\n * @property {string|string[]} root Root or multiple roots from which to serve files.\n * @property {string} [mount] Path from which to serve files. Defaults to `/`.\n * @property {number} [maxage=0] How long to cache file for. Defaults to no caching.\n * @property {object} [config] koa-static configuration.\n *\n * @typedef {Object} MiddlewareConfig\n * @property {ISignature} [session]\n * @property {ISignature} [multer]\n * @property {ISignature} [csrf]\n * @property {ISignature} [compress]\n * @property {ISignature} [bodyparser]\n * @property {ISignature} [checkauth]\n * @property {ISignature} [logger]\n * @property {Static} [static]\n */\n"],"file":"index.js"}